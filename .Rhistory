mode = "wb")
library(dplyr)
list.files("data_raw/", pattern = "data.zip", full.names = TRUE) %>%
as_tibble() %>%
arrange(desc(value)) %>%
slice(1) %>%
pull() %>%
unzip(., exdir = "data_recent/")
library(readr)
read_csv2("data_recent/Hospitalisierung.csv")
read_csv2("data_recent/Hospitalisierung.csv") %>%
filter(BundeslandID == 10)
read_csv2("data_recent/Hospitalisierung.csv") %>% names()
read_csv2("data_recent/Hospitalisierung.csv") %>%
filter(BundeslandID == 10)
323+839+671
read_csv2("data_recent/Hospitalisierung.csv") %>%
janitor::clean_names()
read_csv2("data_recent/Hospitalisierung.csv") %>%
janitor::clean_names() %>% names()
library(lubridate)
read_csv2("data_recent/Hospitalisierung.csv") %>%
janitor::clean_names() %>%
mutate(covid_perc = intensiv_betten_bel_covid19/intensiv_betten_kap_ges*100,
meldedatum = dmy_hms(meldedatum)) %>%
ggplot(aes(meldedatum, covid_perc, group = bundesland_id)) +
geom_line() +
facet_wrap(~bundesland)
library(ggplot2)
read_csv2("data_recent/Hospitalisierung.csv") %>%
janitor::clean_names() %>%
mutate(covid_perc = intensiv_betten_bel_covid19/intensiv_betten_kap_ges*100,
meldedatum = dmy_hms(meldedatum)) %>%
ggplot(aes(meldedatum, covid_perc, group = bundesland_id)) +
geom_line() +
facet_wrap(~bundesland)
theme_set(theme_light())
read_csv2("data_recent/Hospitalisierung.csv") %>%
janitor::clean_names() %>%
mutate(covid_perc = intensiv_betten_bel_covid19/intensiv_betten_kap_ges*100,
meldedatum = dmy_hms(meldedatum)) %>%
ggplot(aes(meldedatum, covid_perc, group = bundesland_id)) +
geom_line() +
facet_wrap(~bundesland)
read_csv2("data_recent/Hospitalisierung.csv") %>%
janitor::clean_names() %>%
mutate(covid_perc = intensiv_betten_bel_covid19/intensiv_betten_kap_ges*100,
meldedatum = dmy_hms(meldedatum)) %>%
ggplot(aes(meldedatum, covid_perc, group = bundesland_id, color = bundesland_id)) +
geom_line()
read_csv2("data_recent/Hospitalisierung.csv") %>%
janitor::clean_names() %>%
mutate(covid_perc = intensiv_betten_bel_covid19/intensiv_betten_kap_ges*100,
meldedatum = dmy_hms(meldedatum),
bundesland_id = as.character(bundesland_id)) %>%
ggplot(aes(meldedatum, covid_perc, group = bundesland_id, color = bundesland_id)) +
geom_line()
read_csv2("data_recent/Hospitalisierung.csv") %>%
janitor::clean_names() %>%
mutate(covid_perc = intensiv_betten_bel_covid19/intensiv_betten_kap_ges*100,
meldedatum = dmy_hms(meldedatum),
bundesland_id = as.character(bundesland_id)) %>%
ggplot(aes(meldedatum, covid_perc, group = bundesland, color = bundesland)) +
geom_line()
read_csv2("data_recent/Hospitalisierung.csv") %>%
janitor::clean_names() %>%
mutate(covid_perc = intensiv_betten_bel_covid19/intensiv_betten_kap_ges*100,
meldedatum = dmy_hms(meldedatum),
bundesland_id = as.character(bundesland_id)) %>%
filter(bundesland_id != "10") %>%
ggplot(aes(meldedatum, covid_perc, group = bundesland, color = bundesland)) +
geom_line()
heute <- gsub("-", "", Sys.Date())
dest_file <- paste0("data_raw/", heute, "_data.zip")
download.file("https://covid19-dashboard.ages.at/data/data.zip",
destfile = dest_file,
mode = "wb")
library(dplyr)
list.files("data_raw/", pattern = "data.zip", full.names = TRUE) %>%
as_tibble() %>%
arrange(desc(value)) %>%
slice(1) %>%
pull() %>%
unzip(., exdir = "data_recent/")
library(readr)
library(lubridate)
library(ggplot2)
theme_set(theme_light())
read_csv2("data_recent/Hospitalisierung.csv") %>%
janitor::clean_names() %>%
mutate(covid_perc = intensiv_betten_bel_covid19/intensiv_betten_kap_ges*100,
meldedatum = dmy_hms(meldedatum),
bundesland_id = as.character(bundesland_id)) %>%
filter(bundesland_id != "10") %>%
ggplot(aes(meldedatum, covid_perc, group = bundesland, color = bundesland)) +
geom_line()
read_csv2("data_recent/Hospitalisierung.csv") %>%
janitor::clean_names()
heute <- gsub("-", "", Sys.Date())
dest_file <- paste0("data_raw/", heute, "_data.zip")
download.file("https://covid19-dashboard.ages.at/data/data.zip",
destfile = dest_file,
mode = "wb")
library(dplyr)
list.files("data_raw/", pattern = "data.zip", full.names = TRUE) %>%
as_tibble() %>%
arrange(desc(value)) %>%
slice(1) %>%
pull() %>%
unzip(., exdir = "data_recent/")
library(readr)
library(lubridate)
library(ggplot2)
theme_set(theme_light())
read_csv2("data_recent/Hospitalisierung.csv") %>%
janitor::clean_names() %>%
mutate(covid_perc = intensiv_betten_bel_covid19/intensiv_betten_kap_ges*100,
meldedatum = dmy_hms(meldedatum),
bundesland_id = as.character(bundesland_id)) %>%
filter(bundesland_id != "10") %>%
ggplot(aes(meldedatum, covid_perc, group = bundesland, color = bundesland)) +
geom_line()
install.packages('raster')
?raster::getData
raster::getData("ISO3")
raster::getData("GADM", country = "AUT", level = 1)
aut_shp <- raster::getData("GADM", country = "AUT", level = 1)
readRDS("gadm36_AUT_1_sp.rds")
# aut_shp <- raster::getData("GADM", country = "AUT", level = 1)
aut_shp <- readRDS("gadm36_AUT_1_sp.rds")
aut_tidy <- aut_shp %>% broom::tidy(region = "CC_1")
install.packages('maptools')
aut_tidy <- aut_shp %>% broom::tidy(region = "CC_1")
# install.packages('maptools')
install.packages("gpclib")
aut_tidy <- aut_shp %>% broom::tidy(region = "CC_1")
install.packages("rgdal")
aut_tidy <- aut_shp %>% broom::tidy(region = "CC_1")
aut_tidy <- aut_shp %>% broom::tidy(region = "CC_1")
heute <- gsub("-", "", Sys.Date())
dest_file <- paste0("data_raw/", heute, "_data.zip")
download.file("https://covid19-dashboard.ages.at/data/data.zip",
destfile = dest_file,
mode = "wb")
library(dplyr)
list.files("data_raw/", pattern = "data.zip", full.names = TRUE) %>%
as_tibble() %>%
arrange(desc(value)) %>%
slice(1) %>%
pull() %>%
unzip(., exdir = "data_recent/")
library(readr)
library(lubridate)
library(ggplot2)
theme_set(theme_light())
read_csv2("data_recent/Hospitalisierung.csv") %>%
janitor::clean_names() %>%
mutate(covid_perc = intensiv_betten_bel_covid19/intensiv_betten_kap_ges*100,
meldedatum = dmy_hms(meldedatum),
bundesland_id = as.character(bundesland_id)) %>%
filter(bundesland_id != "10") %>%
ggplot(aes(meldedatum, covid_perc, group = bundesland, color = bundesland)) +
geom_line()
aut_tidy <- aut_shp %>% broom::tidy(region = "CC_1")
# aut_shp <- raster::getData("GADM", country = "AUT", level = 1)
aut_shp <- readRDS("gadm36_AUT_1_sp.rds")
aut_tidy <- aut_shp %>% broom::tidy(region = "CC_1")
# install.packages('maptools')
install.packages("gpclib", type="source")
aut_tidy <- aut_shp %>% broom::tidy(region = "CC_1")
heute <- gsub("-", "", Sys.Date())
dest_file <- paste0("data_raw/", heute, "_data.zip")
download.file("https://covid19-dashboard.ages.at/data/data.zip",
destfile = dest_file,
mode = "wb")
library(dplyr)
list.files("data_raw/", pattern = "data.zip", full.names = TRUE) %>%
as_tibble() %>%
arrange(desc(value)) %>%
slice(1) %>%
pull() %>%
unzip(., exdir = "data_recent/")
library(readr)
library(lubridate)
library(ggplot2)
theme_set(theme_light())
read_csv2("data_recent/Hospitalisierung.csv") %>%
janitor::clean_names() %>%
mutate(covid_perc = intensiv_betten_bel_covid19/intensiv_betten_kap_ges*100,
meldedatum = dmy_hms(meldedatum),
bundesland_id = as.character(bundesland_id)) %>%
filter(bundesland_id != "10") %>%
ggplot(aes(meldedatum, covid_perc, group = bundesland, color = bundesland)) +
geom_line()
# aut_shp <- raster::getData("GADM", country = "AUT", level = 1)
aut_shp <- readRDS("gadm36_AUT_1_sp.rds")
aut_tidy <- aut_shp %>% broom::tidy(region = "CC_1")
gpclibPermitStatus()
gpclib::gpclibPermitStatus()
library(rgdal)
library(maptools)
if (!require(gpclib)) install.packages("gpclib", type="source")
gpclibPermit()
aut_tidy <- aut_shp %>% broom::tidy(region = "CC_1")
aut_shp
aut_shp@data
aut_tidy <- aut_shp %>% broom::tidy(region = "CC_1")
aut_tidy
aut_shp@polygons
aut_shp@polygons %>% as_tibble()
aut_shp@polygons
aut_tidy <- aut_shp %>% broom::tidy(region = "NAME_1")
aut_tidy
ggplot() +
geom_polygon(aes(lat, lont, group = id))
aut_tidy %>%
ggplot() +
geom_polygon(aes(lat, lont, group = id))
aut_tidy %>%
ggplot() +
geom_polygon(aes(lat, long, group = id))
aut_tidy %>%
ggplot() +
geom_polygon(aes(long, lat, group = id))
aut_tidy %>%
ggplot() +
geom_polygon(aes(long, lat, group = group))
aut_tidy %>%
ggplot() +
geom_polygon(aes(long, lat, group = group)) +
coord_quickmap()
read_csv2("data_recent/Hospitalisierung.csv") %>%
janitor::clean_names() %>%
mutate(covid_perc = intensiv_betten_bel_covid19/intensiv_betten_kap_ges*100,
meldedatum = dmy_hms(meldedatum),
bundesland_id = as.character(bundesland_id)) %>%
filter(bundesland_id != "10")
data_aut <- read_csv2("data_recent/Hospitalisierung.csv") %>%
janitor::clean_names() %>%
mutate(covid_perc = intensiv_betten_bel_covid19/intensiv_betten_kap_ges*100,
meldedatum = dmy_hms(meldedatum),
bundesland_id = as.character(bundesland_id)) %>%
filter(bundesland_id != "10")
data_aut %>%
ggplot(aes(meldedatum, covid_perc, group = bundesland, color = bundesland)) +
geom_line()
aut_tidy
data_aut
data_aut %>%
group_by(bundesland) %>%
filter(meldedatum == max(meldedatum))
aut_tidy
aut_tidy %>%
left_join(
data_aut %>%
group_by(bundesland) %>%
filter(meldedatum == max(meldedatum)) %>%
rename(id = bundesland) %>%
select(id, covid_perc)
)
aut_tidy %>%
left_join(
data_aut %>%
group_by(bundesland) %>%
filter(meldedatum == max(meldedatum)) %>%
rename(id = bundesland) %>%
select(id, covid_perc)
) %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = covid_perc)) +
coord_quickmap()
data_aut
data_aut %>% distinct(meldedatum)
aut_tidy %>%
left_join(
data_aut %>%
group_by(bundesland) %>%
filter(meldedatum == max(meldedatum)) %>%
rename(id = bundesland) %>%
select(id, covid_perc)
) %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = covid_perc)) +
coord_quickmap()
library(lubridate)
data_aut %>%
mutate(monat = floor_date(meldedatum, "month"))
data_aut %>%
mutate(monat = floor_date(meldedatum, "month")) %>%
group_by(bundesland, monat) %>%
summarise(avg_perc = mean(covid_perc))
data_aut %>%
mutate(monat = floor_date(meldedatum, "month")) %>%
group_by(bundesland, monat) %>%
summarise(avg_perc = mean(covid_perc)) %>%
rename(id = bundesland) %>%
select(id, avg_perc, monat)
data_aut %>%
mutate(monat = floor_date(meldedatum, "month"),
monat = as_date(Monat))
data_aut %>%
mutate(monat = floor_date(meldedatum, "month"),
monat = as_Date(Monat)) %>%
group_by(bundesland, monat) %>%
summarise(avg_perc = mean(covid_perc)) %>%
rename(id = bundesland) %>%
select(id, avg_perc, monat)
data_aut %>%
mutate(monat = floor_date(meldedatum, "month"),
monat = as_date(Monat)) %>%
group_by(bundesland, monat) %>%
summarise(avg_perc = mean(covid_perc)) %>%
rename(id = bundesland) %>%
select(id, avg_perc, monat)
data_aut %>%
mutate(monat = floor_date(meldedatum, "month"),
monat = as_date(monat)) %>%
group_by(bundesland, monat) %>%
summarise(avg_perc = mean(covid_perc)) %>%
rename(id = bundesland) %>%
select(id, avg_perc, monat)
aut_tidy %>%
left_join(
data_aut %>%
mutate(monat = floor_date(meldedatum, "month"),
monat = as_date(monat)) %>%
group_by(bundesland, monat) %>%
summarise(avg_perc = mean(covid_perc)) %>%
rename(id = bundesland) %>%
select(id, avg_perc, monat)
) %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = covid_perc)) +
coord_quickmap() +
facet_wrap(~monat)
data_aut %>%
mutate(monat = floor_date(meldedatum, "month"),
monat = as_date(monat)) %>%
group_by(bundesland, monat) %>%
summarise(avg_perc = mean(covid_perc)) %>%
rename(id = bundesland) %>%
select(id, avg_perc, monat)
data_aut %>%
mutate(monat = floor_date(meldedatum, "month"),
monat = as_date(monat)) %>%
group_by(bundesland, monat) %>%
summarise(avg_perc = mean(covid_perc)) %>%
rename(id = bundesland) %>%
select(id, avg_perc, monat) %>% distinct(monat)
?floor_date(meldedatum, "month")
aut_tidy %>%
left_join(
data_aut %>%
mutate(monat = floor_date(meldedatum, "quarter"),
monat = as_date(monat)) %>%
group_by(bundesland, monat) %>%
summarise(avg_perc = mean(covid_perc)) %>%
rename(id = bundesland) %>%
select(id, avg_perc, monat)
) %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = avg_perc)) +
coord_quickmap() +
facet_wrap(~monat)
aut_tidy %>%
left_join(
data_aut %>%
mutate(monat = floor_date(meldedatum, "bimonth"),
monat = as_date(monat)) %>%
group_by(bundesland, monat) %>%
summarise(avg_perc = mean(covid_perc)) %>%
rename(id = bundesland) %>%
select(id, avg_perc, monat)
) %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = avg_perc)) +
coord_quickmap() +
facet_wrap(~monat) +
theme_void()
aut_tidy %>%
left_join(
data_aut %>%
mutate(monat = floor_date(meldedatum, "month"),
monat = as_date(monat)) %>%
group_by(bundesland, monat) %>%
summarise(avg_perc = mean(covid_perc)) %>%
rename(id = bundesland) %>%
select(id, avg_perc, monat)
) %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = avg_perc)) +
coord_quickmap() +
facet_wrap(~monat) +
theme_void()
aut_tidy %>%
left_join(
data_aut %>%
mutate(monat = floor_date(meldedatum, "month"),
monat = as_date(monat)) %>%
group_by(bundesland, monat) %>%
summarise(avg_perc = mean(covid_perc)) %>%
rename(id = bundesland) %>%
select(id, avg_perc, monat)
) %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = avg_perc)) +
coord_quickmap() +
facet_wrap(~monat) +
theme_void() +
scale_fill_viridis_c()
avg_aut_data <- data_aut %>%
mutate(monat = floor_date(meldedatum, "month"),
monat = as_date(monat)) %>%
group_by(bundesland, monat) %>%
summarise(avg_perc = mean(covid_perc)) %>%
rename(id = bundesland) %>%
select(id, avg_perc, monat)
mean(avg_aut_data$avg_perc)
median(avg_aut_data$avg_perc)
max(avg_aut_data$avg_perc)
min(avg_aut_data$avg_perc)
max(avg_aut_data$avg_perc) /2
midpunkt <- (max(avg_aut_data$avg_perc) - min(avg_aut_data$avg_perc)) /2
midpunkt
aut_tidy %>%
left_join(
avg_aut_data
) %>%
ggplot() +
geom_polygon(aes(long, lat, group = group, fill = avg_perc)) +
coord_quickmap() +
facet_wrap(~monat) +
theme_void() +
scale_fill_gradient2(low = "#0081a7", mid = "#fdfcdc", high = "#f07167", midpoint = midpunkt)
usethis::use_readme_rmd()
heute <- gsub("-", "", Sys.Date())
dest_file <- paste0("data_raw/", heute, "_data.zip")
download.file("https://covid19-dashboard.ages.at/data/data.zip",
destfile = dest_file,
mode = "wb")
library(dplyr)
list.files("data_raw/", pattern = "data.zip", full.names = TRUE) %>%
as_tibble() %>%
arrange(desc(value)) %>%
slice(1) %>%
pull() %>%
unzip(., exdir = "data_recent/")
library(readr)
library(lubridate)
library(ggplot2)
theme_set(theme_light())
data_aut <- read_csv2("data_recent/Hospitalisierung.csv") %>%
janitor::clean_names() %>%
mutate(covid_perc = intensiv_betten_bel_covid19/intensiv_betten_kap_ges*100,
meldedatum = dmy_hms(meldedatum),
bundesland_id = as.character(bundesland_id)) %>%
filter(bundesland_id != "10")
data_aut %>%
ggplot(aes(meldedatum, covid_perc, group = bundesland, color = bundesland)) +
geom_line()
heute <- gsub("-", "", Sys.Date())
dest_file <- paste0("data_raw/", heute, "_data.zip")
download.file("https://covid19-dashboard.ages.at/data/data.zip",
destfile = dest_file,
mode = "wb")
library(dplyr)
list.files("data_raw/", pattern = "data.zip", full.names = TRUE) %>%
as_tibble() %>%
arrange(desc(value)) %>%
slice(1) %>%
pull() %>%
unzip(., exdir = "data_recent/")
library(readr)
library(lubridate)
library(ggplot2)
theme_set(theme_light())
data_aut <- read_csv2("data_recent/Hospitalisierung.csv") %>%
janitor::clean_names() %>%
mutate(covid_perc = intensiv_betten_bel_covid19/intensiv_betten_kap_ges*100,
meldedatum = dmy_hms(meldedatum),
bundesland_id = as.character(bundesland_id)) %>%
filter(bundesland_id != "10")
data_aut %>%
ggplot(aes(meldedatum, covid_perc, group = bundesland, color = bundesland)) +
geom_line()
# install.packages('maptools')
# install.packages("gpclib", type="source")
# install.packages("rgdal")
# library(rgdal)
# library(maptools)
# if (!require(gpclib)) install.packages("gpclib", type="source")
# gpclibPermit()
# aut_shp <- raster::getData("GADM", country = "AUT", level = 1)
aut_shp <- readRDS("gadm36_AUT_1_sp.rds")
aut_tidy <- aut_shp %>% broom::tidy(region = "NAME_1")
# install.packages('maptools')
# install.packages("gpclib", type="source")
# install.packages("rgdal")
# library(rgdal)
# library(maptools)
# if (!require(gpclib)) install.packages("gpclib", type="source")
gpclibPermit()
# install.packages('maptools')
# install.packages("gpclib", type="source")
# install.packages("rgdal")
library(rgdal)
library(maptools)
# if (!require(gpclib)) install.packages("gpclib", type="source")
gpclibPermit()
# aut_shp <- raster::getData("GADM", country = "AUT", level = 1)
aut_shp <- readRDS("gadm36_AUT_1_sp.rds")
aut_tidy <- aut_shp %>% broom::tidy(region = "NAME_1")
